{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "spring-boot-microservice-postgresql-s2i",
        "creationTimestamp": null,
        "annotations": {
            "description": "Template for Spring Boot Microservice Deployment",
            "iconClass": "icon-spring",
            "openshift.io/display-name": "Spring Boot JDK 8",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "tags": "java",
            "template.openshift.io/long-description": "This template defines resources needed to deploy a Spring Boot based application.",
            "version": "1.0.0"
        }
    },
    "message": "A new Spring Boot application has been created in your project.",
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The application's http port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's http service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "source": {
                    "contextDir": "${CONTEXT_DIR}",
                    "git": {
                        "ref": "${SOURCE_REPOSITORY_REF}",
                        "uri": "${SOURCE_REPOSITORY_URL}"
                    },
                    "type": "Git"
                },
                "strategy": {
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "java:8",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}"
                        }
                    },
                    "type": "Source"
                },
                "triggers": [
                    {
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        },
                        "type": "GitHub"
                    },
                    {
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        },
                        "type": "Generic"
                    },
                    {
                        "imageChange": {},
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                      "name": "SPRING_DATASOURCE_USERNAME",
                                      "valueFrom": {
                                        "secretKeyRef": {
                                          "name": "${DATABASE_CREDENTIALS_SECRET}",
                                          "key": "db-username"
                                        }
                                      }
                                    },
                                    {
                                      "name": "SPRING_DATASOURCE_PASSWORD",
                                      "valueFrom": {
                                        "secretKeyRef": {
                                          "name": "${DATABASE_CREDENTIALS_SECRET}",
                                          "key": "db-password"
                                        }
                                      }
                                    },
                                    {
                                      "name": "SPRING_DATASOURCE_DB_NAME",
                                      "valueFrom": {
                                        "secretKeyRef": {
                                          "name": "${DATABASE_CREDENTIALS_SECRET}",
                                          "key": "db-name"
                                        }
                                      }
                                    },
                                    {
                                      "name": "JAVA_OPTS_APPEND",
                                      "value": "${JAVA_OPTS_APPEND}"
                                    }
                                ],
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "name": "${APPLICATION_NAME}",
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "livenessProbe": {
                                  "httpGet": {
                                    "path": "/actuator/health",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                  },
                                  "initialDelaySeconds": 180
                                },
                                "readinessProbe": {
                                  "httpGet": {
                                    "path": "/actuator/health",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                  },
                                  "initialDelaySeconds": 30
                                }
                            }
                        ],
                        "terminationGracePeriodSeconds": 75
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                        },
                        "name": "${APPLICATION_NAME}-postgresql"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "valueFrom": {
                                          "secretKeyRef": {
                                            "name": "${DATABASE_CREDENTIALS_SECRET}",
                                            "key": "db-username"
                                          }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "valueFrom": {
                                          "secretKeyRef": {
                                            "name": "${DATABASE_CREDENTIALS_SECRET}",
                                            "key": "db-password"
                                          }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "valueFrom": {
                                          "secretKeyRef": {
                                            "name": "${DATABASE_CREDENTIALS_SECRET}",
                                            "key": "db-name"
                                          }
                                        }
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_CONNECTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_SHARED_BUFFERS",
                                        "value": "${POSTGRESQL_SHARED_BUFFERS}"
                                    }
                                ],
                                "image": "postgresql",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "initialDelaySeconds": 30,
                                    "tcpSocket": {
                                        "port": 5432
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "${APPLICATION_NAME}-postgresql",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-i",
                                            "-c",
                                            "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                        ]
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/pgsql/data",
                                        "name": "${APPLICATION_NAME}-postgresql-pv"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "${APPLICATION_NAME}-postgresql-pv",
                                "persistentVolumeClaim": {
                                    "claimName": "${APPLICATION_NAME}-postgresql-claim"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql-claim"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        }
    ],
    "parameters": [
        {
            "name": "APPLICATION_NAME",
            "displayName": "Application Name",
            "description": "The name for the application.",
            "value": "openjdk-app",
            "required": true
        },
        {
            "name": "SOURCE_REPOSITORY_URL",
            "displayName": "Git Repository URL",
            "description": "Git source URI for application",
            "value": "https://github.com/jboss-openshift/openshift-quickstarts",
            "required": true
        },
        {
            "name": "SOURCE_REPOSITORY_REF",
            "displayName": "Git Reference",
            "description": "Git branch/tag reference",
            "value": "master"
        },
        {
            "name": "CONTEXT_DIR",
            "displayName": "Context Directory",
            "description": "Path within Git project to build; empty for root project directory.",
            "value": "undertow-servlet"
        },
        {
            "name": "DATABASE_CREDENTIALS_SECRET",
            "displayName": "Database Credentials Secret Name",
            "description": "The name of the secret containing the database user and password",
            "value": "",
            "required": true
        },
        {
            "name": "GITHUB_WEBHOOK_SECRET",
            "displayName": "Github Webhook Secret",
            "description": "GitHub trigger secret",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{8}",
            "required": true
        },
        {
            "name": "GENERIC_WEBHOOK_SECRET",
            "displayName": "Generic Webhook Secret",
            "description": "Generic build trigger secret",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{8}",
            "required": true
        },
        {
            "name": "POSTGRESQL_MAX_CONNECTIONS",
            "displayName": "PostgreSQL Maximum number of connections",
            "description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.",
            "required": false
        },
        {
            "name": "POSTGRESQL_SHARED_BUFFERS",
            "displayName": "PostgreSQL Shared Buffers",
            "description": "Configures how much memory is dedicated to PostgreSQL for caching data.",
            "required": false
        },
        {
            "name": "VOLUME_CAPACITY",
            "displayName": "Database Volume Capacity",
            "description": "Size of persistent storage for database volume.",
            "value": "1Gi",
            "required": true
        },
        {
            "name": "IMAGE_STREAM_NAMESPACE",
            "displayName": "ImageStream Namespace",
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "value": "openshift",
            "required": true
        },
        {
            "name": "JAVA_OPTS_APPEND",
            "description": "Additional/custom startup JVM properties/options (eg. -Xms1024m -Xmx1024m)",
            "value": "-Dspring.profiles.active=openshift ",
            "required": false
        }
    ],
    "labels": {
        "template": "spring-boot-microservice-postgresql-s2i",
        "xpaas": "1.0.0"
    }
}
